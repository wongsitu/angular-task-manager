on:
  pull_request:
    types: [reopened, opened, synchronize, edited]

name: Create S3 Environment
jobs:
  create_or_update_pr_env:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Install AWS CDK
        run: sudo npm install -g aws-cdk

      - name: Install Dependencies
        run: npm ci

      - name: Build Site
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          npm run build

      - uses: actions/github-script@v7
        id: generate-branch-name
        with:
          script: |
            return `${{ github.head_ref }}`.toLowerCase().replace(/[^a-z0-9-]/g, '-').substring(0, 63) + "-" + `${{ github.actor }}`;
          result-encoding: string

      - name: CDK diff
        run: cdk diff

      - name: CDK deploy
        run: cdk deploy --context stackName=${{ env.STACK_NAME }} --parameters BucketName=${{ env.STACK_NAME }} --require-approval never
        env:
          STACK_NAME: ${{ steps.generate-branch-name.outputs.result }}

      - name: Update or Create PR Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const commentPrefix = 'AWS S3 Link:';
            const comment = comments.find(comment => comment.user.login === 'github-actions[bot]' && comment.body.includes(commentPrefix));
            const WEBSITE_LINK = `http://${{ env.STACK_NAME }}.s3-website-${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/`;
            const message = `${commentPrefix} [${WEBSITE_LINK}](${WEBSITE_LINK.replace(/"/gs, '')})`;

            if (comment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id,
                body: message,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message,
              });
            }
        env:
          STACK_NAME: ${{ steps.generate-branch-name.outputs.result }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
